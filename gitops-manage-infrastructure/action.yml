name: 'Manage infrastructure'
description: 'Create or update the Azure infrastructure using Terraform'
branding:
  icon: 'cloud'  
  color: 'blue'
inputs:
  azure_credentials:
    description: 'Azure Credentials, stored in a secret on your GitHub repository, generated by https://github.com/microsoft/NubesGen/blob/main/docs/gitops-quick-start.md'
    required: true
  tf_storage_account:
    description: 'Terraform storage account name, stored in a secret on your GitHub repository, generated by https://github.com/microsoft/NubesGen/blob/main/docs/gitops-quick-start.md'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set environment variables
      env:
        AZURE_CREDENTIALS: ${{ inputs.azure_credentials }}
      run: |
        TAG_NAME=${GITHUB_REF#refs/*/}
        echo "ENVIRONMENT=${TAG_NAME:4}" >> $GITHUB_ENV
        echo "ARM_CLIENT_ID=$(echo $AZURE_CREDENTIALS | jq -r .clientId)" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=$(echo $AZURE_CREDENTIALS | jq -r .subscriptionId)" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=$(echo $AZURE_CREDENTIALS | jq -r .tenantId)" >> $GITHUB_ENV
      shell: bash
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false
    - name: Initialize Terraform
      env:
        AZURE_CREDENTIALS: ${{ inputs.azure_credentials }}
        TF_STORAGE_ACCOUNT: ${{ inputs.tf_storage_account }}
      run: |
        export ARM_CLIENT_SECRET=$(echo $AZURE_CREDENTIALS | jq -r .clientSecret)
        terraform init \
        -input=false \
        -backend-config="resource_group_name=rg-terraform-001" \
        -backend-config="storage_account_name=$TF_STORAGE_ACCOUNT_LOCAL" \
        -backend-config="container_name=tfstate" \
        -backend-config="key=$ENVIRONMENT.terraform.tfstate"
      shell: bash
      working-directory: '${{ github.workspace }}/terraform'
    - name: Apply Terraform
      env:
        AZURE_CREDENTIALS: ${{ inputs.azure_credentials }}
        TF_STORAGE_ACCOUNT: ${{ inputs.tf_storage_account }}
      run: |
        export ARM_CLIENT_SECRET=$(echo $AZURE_CREDENTIALS | jq -r .clientSecret)
        terraform apply \
        -input=false \
        -auto-approve \
        -var="environment=$ENVIRONMENT"
      shell: bash
      working-directory: '${{ github.workspace }}/terraform'
    - name: Get application name generated in Terraform
      run: |
        echo $(terraform output --raw application_name) > application_name.txt
      working-directory: '${{ github.workspace }}/terraform'
      shell: bash
    - name: Save application name
      uses: actions/upload-artifact@v2
      with:
        name: application_name
        path: '${{ github.workspace }}/terraform/application_name.txt'
        retention-days: 1
