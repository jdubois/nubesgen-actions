name: 'Build and deploy a Docker image of a Spring Boot project'
description: 'Build and deploy a Docker image of a Spring Boot project'
inputs:
  azure_credentials:
    description: 'Azure Credentials, stored in a secret on your GitHub repository, generated by https://github.com/microsoft/NubesGen/blob/main/docs/gitops-quick-start.md'
    required: true
runs:
  using: "composite"
  steps:
    - name: Download Terraform output data
      uses: actions/download-artifact@v2
      with:
        name: terraform-output
    - name: Set environment variables
      run: |
        echo "APPLICATION_CAF_NAME=$(cat terraform-output.json | jq -r .application_caf_name.value)" >> $GITHUB_ENV
        echo "CONTAINER_REGISTRY_NAME=$(cat terraform-output.json | jq -r .container_registry_name.value)" >> $GITHUB_ENV
      shell: bash
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 11
        check-latest: false
        cache: 'maven'
    - name: Build with Maven
      run: mvn spring-boot:build-image -Pprod,azure -Dspring-boot.build-image.imageName=${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.APPLICATION_CAF_NAME }}/${{ env.APPLICATION_CAF_NAME }}:${{ github.sha }}
      shell: bash
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ inputs.azure_credentials }}
    - name: Push to Azure Container Registry
      env:
        AZURE_CREDENTIALS: ${{ inputs.azure_credentials }}
      run: |
        az acr login -n ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io
        docker push ${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.APPLICATION_CAF_NAME }}/${{ env.APPLICATION_CAF_NAME }}:${{ github.sha }}
      shell: bash
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APPLICATION_CAF_NAME }}
        images: '${{ env.CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.APPLICATION_CAF_NAME }}/${{ env.APPLICATION_CAF_NAME }}:${{ github.sha }}'
